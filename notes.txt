For editor, make systems and put their gui in an noter system (i.e. MySystem & MySystemGui). 
This way these systems can be reused when making a game-running project to run a game 
without the editor.

The resource manifest should be the resource directory built into a resources.manifest file 
which will be used for a published game project. SetResourceDir() should accept .manifest
files and parse them to create a virtual directory for the resources so ResourceManagement
can be used the same way in the editor game and the published game.

For project system, use static class ProjectManagement with api for loading, saving etc 
and then use the api in ecs.

For the job system for the editor, have an option to mark jobs as multithreaded.
Job system will be used to queue up any tasks in the editor and wait for them in every frame
and let the user know with a loading symbol while freezing the interface.